{"ast":null,"code":"var _jsxFileName = \"D:\\\\C\\\\admission-dashboard\\\\course-cart\\\\src\\\\CollegeDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollegeDetails = () => {\n  _s();\n  const [colleges, setColleges] = useState([]);\n  useEffect(() => {\n    const fetchCollegeUsers = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/college-users');\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setColleges(data);\n      } catch (error) {\n        console.error('Error fetching college users:', error);\n      }\n    };\n    fetchCollegeUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"College Login Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), colleges.map(college => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log('College:', college), college.user ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"User Name: \", college.user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", college.user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User Type: \", college.user.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No user information available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"College: \", college.user.college]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Uploaded Courses:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: college.courses.length > 0 ? college.courses.map(course => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [course.title, \" (\", course.branch, \")\"]\n        }, course._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No courses uploaded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, college._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(CollegeDetails, \"VHk19bTtS3XKsQFBq/Z/HH2HhPs=\");\n_c = CollegeDetails;\nexport default CollegeDetails;\nvar _c;\n$RefreshReg$(_c, \"CollegeDetails\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CollegeDetails","_s","colleges","setColleges","fetchCollegeUsers","response","fetch","ok","Error","status","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","college","log","user","name","email","type","courses","length","course","title","branch","_id","_c","$RefreshReg$"],"sources":["D:/C/admission-dashboard/course-cart/src/CollegeDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CollegeDetails = () => {\r\n  const [colleges, setColleges] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCollegeUsers = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/college-users');\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setColleges(data);\r\n      } catch (error) {\r\n        console.error('Error fetching college users:', error);\r\n      }\r\n    };\r\n\r\n    fetchCollegeUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>College Login Users</h2>\r\n      {colleges.map((college) => (\r\n        <div key={college._id}>\r\n          {console.log('College:', college)}\r\n          {/* Display user details */}\r\n          {college.user ? (\r\n            <div>\r\n              <h3>User Name: {college.user.name}</h3>\r\n              <p>Email: {college.user.email}</p>\r\n              <p>User Type: {college.user.type}</p>\r\n            </div>\r\n          ) : (\r\n            <p>No user information available</p>\r\n          )}\r\n          <p>College: {college.user.college}</p>\r\n          <p>Uploaded Courses:</p>\r\n          \r\n          <ul>\r\n            {college.courses.length > 0 ? (\r\n              college.courses.map((course) => (\r\n                <li key={course._id}>\r\n                  {course.title} ({course.branch})\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <li>No courses uploaded</li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollegeDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}