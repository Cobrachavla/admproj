{"ast":null,"code":"var _jsxFileName = \"D:\\\\C\\\\admission-dashboard\\\\course-cart\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport UserInfo from './components/UserInfo';\nimport Filters from './components/Filters';\nimport CourseCard from './components/CourseCard';\nimport FixedBottom from './components/FixedBottom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [courses, setCourses] = useState([]);\n  const [filters, setFilters] = useState({\n    branches: [],\n    districts: []\n  });\n  const [selectedBranches, setSelectedBranches] = useState([]);\n  const [selectedDistricts, setSelectedDistricts] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [purchases, setPurchases] = useState([]);\n  useEffect(() => {\n    // Load user from local storage\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n    if (storedUser) {\n      setUser(storedUser);\n    }\n\n    // Fetch filters from the API\n    const fetchFilters = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/filters');\n        const data = await response.json();\n        setFilters(data);\n      } catch (error) {\n        console.error('Error fetching filters:', error);\n      }\n    };\n    fetchFilters();\n  }, []);\n  useEffect(() => {\n    if (user) {\n      // Fetch cart and purchases for the logged-in user\n      const fetchCart = async () => {\n        try {\n          const response = await fetch('http://localhost:5000/api/cart', {\n            credentials: 'include' // Pass session information\n          });\n          const data = await response.json();\n          setCart(data);\n        } catch (error) {\n          console.error('Error fetching cart:', error);\n        }\n      };\n      const fetchPurchases = async () => {\n        try {\n          const response = await fetch(`http://localhost:5000/api/purchases?userId=${user._id}`);\n          const data = await response.json();\n          setPurchases(data);\n        } catch (error) {\n          console.error('Error fetching purchases:', error);\n        }\n      };\n      fetchCart();\n      fetchPurchases();\n    }\n  }, [user]);\n  const handleApplyFilters = (branches, districts) => {\n    setSelectedBranches(branches);\n    setSelectedDistricts(districts);\n    const fetchFilteredCourses = async () => {\n      try {\n        const branchQuery = branches.join(',');\n        const distQuery = districts.join(',');\n        const response = await fetch(`http://localhost:5000/api/courses?degree=${user.course}&branch=${branchQuery}&district=${distQuery}`);\n        const data = await response.json();\n        setCourses(data);\n      } catch (error) {\n        console.error('Error fetching filtered courses:', error);\n      }\n    };\n    fetchFilteredCourses();\n  };\n  const handleResetFilters = () => {\n    setSelectedBranches([]);\n    setSelectedDistricts([]);\n    const fetchCourses = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/courses?degree=${user.course}`);\n        const data = await response.json();\n        setCourses(data);\n      } catch (error) {\n        console.error('Error fetching courses:', error);\n      }\n    };\n    fetchCourses();\n  };\n  const handleAddToCart = async course => {\n    try {\n      const response = await fetch('http://localhost:5000/api/cart', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          course\n        }),\n        credentials: 'include'\n      });\n      const updatedCart = await response.json();\n      setCart(updatedCart);\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n    }\n  };\n  const handleRemoveFromCart = async courseId => {\n    try {\n      const response = await fetch('http://localhost:5000/api/cart', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          courseId\n        }),\n        credentials: 'include'\n      });\n      const updatedCart = await response.json();\n      setCart(updatedCart);\n    } catch (error) {\n      console.error('Error removing from cart:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(UserInfo, {\n      user: user,\n      onLogout: () => setUser(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      filters: filters,\n      selectedBranches: selectedBranches,\n      selectedDistricts: selectedDistricts,\n      onApplyFilters: handleApplyFilters,\n      onResetFilters: handleResetFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-cards\",\n      children: courses.map(course => /*#__PURE__*/_jsxDEV(CourseCard, {\n        course: course,\n        onAddToCart: handleAddToCart\n      }, course._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FixedBottom, {\n      cart: cart,\n      onRemoveFromCart: handleRemoveFromCart,\n      purchases: purchases\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"HscolpAayNt5fUjz09CvCj9UE6g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Link","UserInfo","Filters","CourseCard","FixedBottom","jsxDEV","_jsxDEV","App","_s","user","setUser","courses","setCourses","filters","setFilters","branches","districts","selectedBranches","setSelectedBranches","selectedDistricts","setSelectedDistricts","cart","setCart","purchases","setPurchases","storedUser","JSON","parse","localStorage","getItem","fetchFilters","response","fetch","data","json","error","console","fetchCart","credentials","fetchPurchases","_id","handleApplyFilters","fetchFilteredCourses","branchQuery","join","distQuery","course","handleResetFilters","fetchCourses","handleAddToCart","method","headers","body","stringify","updatedCart","handleRemoveFromCart","courseId","className","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onApplyFilters","onResetFilters","map","onAddToCart","onRemoveFromCart","_c","$RefreshReg$"],"sources":["D:/C/admission-dashboard/course-cart/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport UserInfo from './components/UserInfo';\r\nimport Filters from './components/Filters';\r\nimport CourseCard from './components/CourseCard';\r\nimport FixedBottom from './components/FixedBottom';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [courses, setCourses] = useState([]);\r\n  const [filters, setFilters] = useState({ branches: [], districts: [] });\r\n  const [selectedBranches, setSelectedBranches] = useState([]);\r\n  const [selectedDistricts, setSelectedDistricts] = useState([]);\r\n  const [cart, setCart] = useState([]);\r\n  const [purchases, setPurchases] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Load user from local storage\r\n    const storedUser = JSON.parse(localStorage.getItem('user'));\r\n    if (storedUser) {\r\n      setUser(storedUser);\r\n    }\r\n\r\n    // Fetch filters from the API\r\n    const fetchFilters = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/filters');\r\n        const data = await response.json();\r\n        setFilters(data);\r\n      } catch (error) {\r\n        console.error('Error fetching filters:', error);\r\n      }\r\n    };\r\n    fetchFilters();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      // Fetch cart and purchases for the logged-in user\r\n      const fetchCart = async () => {\r\n        try {\r\n          const response = await fetch('http://localhost:5000/api/cart', {\r\n            credentials: 'include' // Pass session information\r\n          });\r\n          const data = await response.json();\r\n          setCart(data);\r\n        } catch (error) {\r\n          console.error('Error fetching cart:', error);\r\n        }\r\n      };\r\n\r\n      const fetchPurchases = async () => {\r\n        try {\r\n          const response = await fetch(`http://localhost:5000/api/purchases?userId=${user._id}`);\r\n          const data = await response.json();\r\n          setPurchases(data);\r\n        } catch (error) {\r\n          console.error('Error fetching purchases:', error);\r\n        }\r\n      };\r\n\r\n      fetchCart();\r\n      fetchPurchases();\r\n    }\r\n  }, [user]);\r\n\r\n  const handleApplyFilters = (branches, districts) => {\r\n    setSelectedBranches(branches);\r\n    setSelectedDistricts(districts);\r\n\r\n    const fetchFilteredCourses = async () => {\r\n      try {\r\n        const branchQuery = branches.join(',');\r\n        const distQuery = districts.join(',');\r\n        const response = await fetch(`http://localhost:5000/api/courses?degree=${user.course}&branch=${branchQuery}&district=${distQuery}`);\r\n        const data = await response.json();\r\n        setCourses(data);\r\n      } catch (error) {\r\n        console.error('Error fetching filtered courses:', error);\r\n      }\r\n    };\r\n    fetchFilteredCourses();\r\n  };\r\n\r\n  const handleResetFilters = () => {\r\n    setSelectedBranches([]);\r\n    setSelectedDistricts([]);\r\n\r\n    const fetchCourses = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/courses?degree=${user.course}`);\r\n        const data = await response.json();\r\n        setCourses(data);\r\n      } catch (error) {\r\n        console.error('Error fetching courses:', error);\r\n      }\r\n    };\r\n    fetchCourses();\r\n  };\r\n\r\n  const handleAddToCart = async (course) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/cart', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ course }),\r\n        credentials: 'include'\r\n      });\r\n      const updatedCart = await response.json();\r\n      setCart(updatedCart);\r\n    } catch (error) {\r\n      console.error('Error adding to cart:', error);\r\n    }\r\n  };\r\n\r\n  const handleRemoveFromCart = async (courseId) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/cart', {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ courseId }),\r\n        credentials: 'include'\r\n      });\r\n      const updatedCart = await response.json();\r\n      setCart(updatedCart);\r\n    } catch (error) {\r\n      console.error('Error removing from cart:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <UserInfo user={user} onLogout={() => setUser(null)} />\r\n      <Filters\r\n        filters={filters}\r\n        selectedBranches={selectedBranches}\r\n        selectedDistricts={selectedDistricts}\r\n        onApplyFilters={handleApplyFilters}\r\n        onResetFilters={handleResetFilters}\r\n      />\r\n      <div className=\"course-cards\">\r\n        {courses.map(course => (\r\n          <CourseCard key={course._id} course={course} onAddToCart={handleAddToCart} />\r\n        ))}\r\n      </div>\r\n      <FixedBottom cart={cart} onRemoveFromCart={handleRemoveFromCart} purchases={purchases} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}