{"ast":null,"code":"var _jsxFileName = \"/home/vjrdnti/Desktop/vm/course-cart/course-cart/src/components/CourseList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseList = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/courses-admin').then(res => res.json()).then(data => setCourses(data)).catch(err => console.error(err));\n  }, []);\n  const updateCourseStatus = (id, status) => {\n    const updatedCourse = courses.find(course => course.id === id);\n    updatedCourse.status = status;\n    fetch('http://localhost:5000/api/courses-admin', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedCourse)\n    }).then(res => res.text()).then(data => {\n      setCourses(prevCourses => prevCourses.map(course => course.id === id ? updatedCourse : course));\n      alert(data);\n    }).catch(err => console.error(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"course-list\",\n    children: courses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: course.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: course.branch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: course.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `status-${course.id}`,\n          value: \"verified\",\n          checked: course.status === 'verified',\n          onChange: () => updateCourseStatus(course.id, 'verified')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), \"Verified\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `status-${course.id}`,\n          value: \"unverified\",\n          checked: course.status === 'unverified',\n          onChange: () => updateCourseStatus(course.id, 'unverified')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), \"Unverified\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, course.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(CourseList, \"Ks3haE1eP87BHv/TJ29co0rtnQM=\");\n_c = CourseList;\nexport default CourseList;\nvar _c;\n$RefreshReg$(_c, \"CourseList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CourseList","_s","courses","setCourses","fetch","then","res","json","data","catch","err","console","error","updateCourseStatus","id","status","updatedCourse","find","course","method","headers","body","JSON","stringify","text","prevCourses","map","alert","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","branch","description","type","name","value","checked","onChange","_c","$RefreshReg$"],"sources":["/home/vjrdnti/Desktop/vm/course-cart/course-cart/src/components/CourseList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst CourseList = () => {\n    const [courses, setCourses] = useState([]);\n\n    useEffect(() => {\n        fetch('http://localhost:5000/api/courses-admin')\n            .then(res => res.json())\n            .then(data => setCourses(data))\n            .catch(err => console.error(err));\n    }, []);\n\n    const updateCourseStatus = (id, status) => {\n        const updatedCourse = courses.find(course => course.id === id);\n        updatedCourse.status = status;\n\n        fetch('http://localhost:5000/api/courses-admin', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(updatedCourse),\n        })\n        .then(res => res.text())\n        .then(data => {\n            setCourses(prevCourses =>\n                prevCourses.map(course =>\n                    course.id === id ? updatedCourse : course\n                )\n            );\n            alert(data);\n        })\n        .catch(err => console.error(err));\n    };\n\n    return (\n        <div className=\"course-list\">\n            {courses.map(course => (\n                <div key={course.id}>\n                    <h2>{course.title}</h2>\n                    <p>{course.branch}</p>\n                    <p>{course.description}</p>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            name={`status-${course.id}`}\n                            value=\"verified\"\n                            checked={course.status === 'verified'}\n                            onChange={() => updateCourseStatus(course.id, 'verified')}\n                        />\n                        Verified\n                    </label>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            name={`status-${course.id}`}\n                            value=\"unverified\"\n                            checked={course.status === 'unverified'}\n                            onChange={() => updateCourseStatus(course.id, 'unverified')}\n                        />\n                        Unverified\n                    </label>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default CourseList;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}